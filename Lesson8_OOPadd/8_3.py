"""
3)	Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить
работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список только числами.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class MyExcept(Exception):
    def __init__(self, text):
        self.text = text


if __name__ == "__main__":
    my_list = []
    while True:
        user_input = input('Enter number: ')
        if user_input == "stop":
            break
        try:
            for symbol in user_input:
                # check ASCII code
                if not 47 < ord(symbol) < 58:
                    raise MyExcept('You enter not a number!!')
            my_list.append(int(user_input))
        except MyExcept as e:
            print(e)
    print(my_list)



